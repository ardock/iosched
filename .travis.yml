# Copyright 2014 Google Inc. All rights reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: android

jdk:
  # Test against one or more JDKs. (Travis CI provides openjdk6, openjdk7, oraclejdk7, and oraclejdk8).
  - openjdk7
  - oraclejdk7

android:
  components:
    # Note: Revisions included depend on android-sdk included, we need last version, currently not included.
    # See required: https://github.com/google/iosched/blob/master/doc/BUILDING.md
    # See defaults: https://github.com/travis-ci/travis-cookbooks/blob/master/ci_environment/android-sdk/attributes/default.rb

    # Comment the lines below if the latest revisions of Android SDK Tools are included by default.
    - platform-tools
    - tools

    # Comment the lines below if the latest BuildTools versions used by Android Wear and Android Lollipop are included.
    - build-tools-20.0.0
    - build-tools-21.0.2

    # Comment the lines below if the SDK versions used to compile Android Wear and Android Lollipop are included.
    - android-20
    - android-21

    # Comment the lines below if the latest additional components are included by default or not required.
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - extra-android-support

    # Comment the lines below if the latest images are included or you don't need to run emulator(s) during your tests.
    - sys-img-armeabi-v7a-android-wear-20
    - sys-img-armeabi-v7a-android-21

  licenses:
    # By default, Travis CI will accept all the requested licenses, but it is also possible to define a white list:
    # See http://docs.travis-ci.com/user/languages/android/#Dealing-with-Licenses
    # License id: android-sdk-license-5be876d5 Used by:Android SDK Platform-tools, revision 21 and other (October 2014).
    - 'android-sdk-license-5be876d5'
    # White list future versions
    # - 'android-sdk-license-.+'
    # White list all the licenses
    # - '.+'

notifications:
  email: false

env:
  matrix:
    # Travis CI will run your tests against a matrix of all possible combinations.
    # For Android projects, env and jdk can be given as arrays to construct a build matrix.
    # See http://docs.travis-ci.com/user/build-configuration/#The-Build-Matrix
    # - ANDROID_TARGET=android-15  ANDROID_ABI=armeabi-v7a
    # - ANDROID_TARGET=android-16  ANDROID_ABI=armeabi-v7a
    # - ANDROID_TARGET=android-17  ANDROID_ABI=armeabi-v7a
    # - ANDROID_TARGET=android-18  ANDROID_ABI=armeabi-v7a

    - ANDROID_TARGET=android-21  ANDROID_ABI=armeabi-v7a
    - ANDROID_TARGET=android-19  ANDROID_ABI=armeabi-v7a

before_install:
  # - pwd
  # - ls -al
  # - android list sdk --no-ui --all --extended
  # - android list sdk --no-ui --all --extended | grep -E '^id:' | awk -F '"' '{$1=""; print $2}'
  # - android list targets | grep -e '^\(\(id:\)\|\( Tag\)\)'

  # Create and start emulator. AVD name based on target, abi and random suffix (different name for multiple JDKs matrix).
  - AVD_NAME=test-"${ANDROID_TARGET}"-"${ANDROID_ABI}"-"${RANDOM}"
  - echo no | android create avd --force -n test -t "$ANDROID_TARGET" --abi "$ANDROID_ABI"
  - emulator -avd test -no-skin -no-audio -no-window &

# install:
  # If you'd like to skip the install stage entirely, set it to true and nothing will be run.
  # See http://docs.travis-ci.com/user/build-configuration/#install
  #- true
  # - TERM=dumb ./gradlew clean check assembleDebug -PdisablePreDex

before_script:
  - ./scripts/wait_for_emulator.sh
  - adb shell input keyevent 26 &
  - adb shell input keyevent 82 &

script:
  # If -PdisablePreDex option is added, disables pre-dexing on build server improving performance.
  # See http://tools.android.com/tech-docs/new-build-system/tips#TOC-Improving-Build-Server-performance.
  # - TERM=dumb ./gradlew build connectedCheck
  # - TERM=dumb ./gradlew build connectedCheck -PdisablePreDex

after_failure:
  - cd /home/travis/build/ardock/iosched/android/build/outputs/reports/androidTests/connected/
  - sudo apt-get install lynx
  - lynx --dump index.html > connectedAndroidTest.log
  - for file in *.log; do echo "$file"; echo "====================="; cat "$file"; done || true