# Copyright 2014 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


language: android

# TODO: test cache option See http://docs.travis-ci.com/user/workers/container-based-infrastructure/
sudo: false
cache:
  apt: true
  directories:
    - ${TRAVIS_BUILD_DIR}/gradle/caches/
    - ${TRAVIS_BUILD_DIR}/gradle/wrapper/dists/
    # - ${TRAVIS_BUILD_DIR}/android-sdk/extras/android/m2repository/
    # - ${TRAVIS_BUILD_DIR}/android-sdk/extras/google/m2repository/

jdk: oraclejdk7

env:
  global:
    - GRADLE_USER_HOME=${TRAVIS_BUILD_DIR}/gradle ANDROID_HOME=${TRAVIS_BUILD_DIR}/android-sdk
    - PATH=${GRADLE_USER_HOME}/bin/:${ANDROID_HOME}/:${ANDROID_HOME}/tools/:${ANDROID_HOME}/platform-tools/:${PATH}
    - BUILD_TOOLS=build-tools-21.1.1 MOBI_MOD_NAME=android WEAR_MOD_NAME=Wearable

  matrix:
    - AVD_TARGET=android-15  AVD_ABI=armeabi-v7a  AVD_TAG=default
    # - AVD_TARGET=android-16  AVD_ABI=armeabi-v7a  AVD_TAG=default
    # - AVD_TARGET=android-17  AVD_ABI=armeabi-v7a  AVD_TAG=default
    # - AVD_TARGET=android-18  AVD_ABI=armeabi-v7a  AVD_TAG=default
    # - AVD_TARGET=android-19  AVD_ABI=armeabi-v7a  AVD_TAG=default
    # - AVD_TARGET=android-21  AVD_ABI=armeabi-v7a  AVD_TAG=default
    - AVD_TARGET=android-15  AVD_ABI=armeabi-v7a  AVD_TAG=default  ARGS='-PdisablePreDex'
    # - AVD_TARGET=android-16  AVD_ABI=armeabi-v7a  AVD_TAG=default  ARGS='-PdisablePreDex'
    # - AVD_TARGET=android-17  AVD_ABI=armeabi-v7a  AVD_TAG=default  ARGS='-PdisablePreDex'
    # - AVD_TARGET=android-18  AVD_ABI=armeabi-v7a  AVD_TAG=default  ARGS='-PdisablePreDex'
    # - AVD_TARGET=android-19  AVD_ABI=armeabi-v7a  AVD_TAG=default  ARGS='-PdisablePreDex'
    - AVD_TARGET=android-21  AVD_ABI=armeabi-v7a  AVD_TAG=default  ARGS='-PdisablePreDex'

    # TODO: Include x86 and x86_64 ABIs, google_apis and android-wear.
    # - AVD_TARGET=android-21  AVD_ABI=x86  AVD_TAG=default  ARGS='-PdisablePreDex'
    # - AVD_TARGET=android-21  AVD_ABI=x86_64  AVD_TAG=default  ARGS='-PdisablePreDex'
    # - AVD_TARGET='Google Inc.:Google APIs:21'  AVD_ABI=armeabi-v7a  AVD_TAG=google_apis  ARGS='-PdisablePreDex'
    # - AVD_TARGET=android-20  AVD_ABI=armeabi-v7a  AVD_TAG=android-wear  ARGS='-PdisablePreDex'

matrix:
  allow_failures:
    # - env: AVD_TARGET=android-21  AVD_ABI=x86  AVD_TAG=default  ARGS='-PdisablePreDex'
    # - env: AVD_TARGET=android-21  AVD_ABI=x86_64  AVD_TAG=default  ARGS='-PdisablePreDex'
    # - env: AVD_TARGET='Google Inc.:Google APIs:21'  AVD_ABI=armeabi-v7a  AVD_TAG=google_apis  ARGS='-PdisablePreDex'
    # - env: AVD_TARGET=android-20  AVD_ABI=armeabi-v7a  AVD_TAG=android-wear  ARGS='-PdisablePreDex'
  # Disabled until https://github.com/travis-ci/travis-ci/issues/1696 is fixed. Avoid notifications.
  # fast_finish: true

notifications:
  email: false


before_install:
  # - echo 'DEFAULT SCRIPTS'; echo "$PATH"; ls /usr/local/bin -Al
  # - cat /usr/local/bin/android-accept-licenses
  # - cat /usr/local/bin/android-update-sdk
  # - cat /usr/local/bin/android-wait-for-emulator

  # - echo 'FREE RESOURCES', sudo service --status-all
  # - sudo service elasticsearch stop; sudo service mongodb stop; sudo service rsync stop || true
  # - sudo service postgresql stop; sudo service mysql stop; sudo service memcached stop || true

  - echo 'EXPORT ENV VARIABLES'
  # Custom the app module name based on type of device: mobile or wearable.
  - 'export MOD_NAME=`[[ $AVD_TAG = android-wear ]] && echo $WEAR_MOD_NAME || echo $MOBI_MOD_NAME`'
  # Custom AVD name.
  - 'export AVD_NAME="${AVD_TARGET_DIR}-${AVD_TAG:-default}-${AVD_ABI}-${RANDOM:-}${DISABLE_PREDEX:-}"'
  # Custom the avd path.
  - 'mkdir avds; export AVD_PATH="${TRAVIS_BUILD_DIR:-.}/avds/${AVD_NAME:-test}"; echo "$AVD_PATH"'
  # Google APIs folder name based on target. TODO: Extend to other APIs
  - export AVD_TARGET_DIR="$AVD_TARGET"
  - 'if [[ $AVD_TARGET == "Google Inc.:Google APIs:21" ]]; then AVD_TARGET_DIR="android-21"; fi'
  # Add Disable Pre-dexing option to build matrix and gradle commands.
  - 'if [[ "${ARGS:-}" == *-PdisablePreDex* ]]; then export DISABLE_PREDEX="-PdisablePreDex"; fi'

  - echo 'WARNING: delete this fix after the issue about SDK location and permissions is solved.'
  - ls ${TRAVIS_BUILD_DIR}/android-sdk/extras/android/m2repository/ -Al || true
  - ls ${TRAVIS_BUILD_DIR}/android-sdk/extras/google/m2repository/ -Al || true
  # - rm -R -f ${TRAVIS_BUILD_DIR}/android-sdk/extras || echo "Error removing SDK cache extras..."
  - pwd ; ls /usr/local/android-sdk-23.0.2 -Al ; ls ${TRAVIS_BUILD_DIR}/android-sdk -Al || true
  - cp -R /usr/local/android-sdk-23.0.2 ${TRAVIS_BUILD_DIR}/android-sdk || echo "Work around failed"

  - echo 'LIST SUGGESTED SDK PACKAGES FOR INSTALL'; android list sdk -e || true
  - echo 'LIST AVAILABLE SDK PACKAGES FOR INSTALL'; android list sdk -a -e || true
  - echo 'LIST INSTALLED AVDS, ANDROID TARGETS AND DEVICE DEFINITIONS'; android list || true
  - echo 'UPDATE SDK (remove -a --all flag and only suggested updates will be installed)'
  - echo y | android update sdk -u -t tool || true
  - echo y | android update sdk -u -t platform-tool || true
  - echo y | android update sdk -a -u -t $BUILD_TOOLS || true
  - echo y | android update sdk -a -u -t android-20,sys-img-armeabi-v7a-android-wear-20 || true
  - echo y | android update sdk -a -u -t android-21,sys-img-armeabi-v7a-android-21 || true
  - echo y | android update sdk -u -t extra-android-m2repository,extra-android-support || true
  - echo y | android update sdk -u -t extra-google-m2repository,extra-google-google_play_services || true
  - echo y | android update sdk -a -u -t addon-google_apis-google-21 || true
  - echo y | android update sdk -a -u -t sys-img-armeabi-v7a-addon-google_apis-google-21 || true
  - echo 'LIST SUGGESTED SDK PACKAGES FOR INSTALL'; android list sdk -e || true
  - echo 'LIST AVAILABLE SDK PACKAGES FOR INSTALL'; android list sdk -a -e || true
  - echo 'FILTERED LIST'; - android update sdk -u -n -t platform,system-image,add-on,extra || true
  - echo 'LIST INSTALLED AVDS, ANDROID TARGETS AND DEVICE DEFINITIONS'; android list || true
  - echo 'LIST SYSTEM IMAGE PATH, FILES AND PROPERTIES:'
  - 'echo ${ANDROID_HOME}/system-images/${AVD_TARGET_DIR}/${AVD_TAG}/${AVD_ABI}'
  - 'ls ${ANDROID_HOME}/system-images/${AVD_TARGET_DIR}/${AVD_TAG}/${AVD_ABI} -al || true'
  - 'cat ${ANDROID_HOME}/system-images/${AVD_TARGET_DIR}/${AVD_TAG}/${AVD_ABI}/build.prop || true'

install:
  - echo "LIST ANDROID SDK FOLDERS; ls ${TRAVIS_BUILD_DIR}/android-sdk -Al || true
  - 'echo "CREATE AVD"; echo no | android create avd --force -n "${AVD_NAME:-test}" -t "${AVD_TARGET}" -b ${AVD_ABI:-} -g ${AVD_TAG:-default} -p ${AVD_PATH:-.}'
  - 'echo "SHOW AVD CONFIG ${AVD_PATH:-.}/config.ini:"; cat "${AVD_PATH:-.}/config.ini" || true'
  - echo 'START EMULATOR JOB'; 'emulator -avd "${AVD_NAME:-test}" -no-skin -no-audio -no-window &'
  - echo 'WAIT FOR EMULATOR ONLINE (DEVICE STATE)'; adb wait-for-device
  - echo 'DOWNLOAD GRADLE WRAPPER AND SHOW VERSION'; chmod +x ./gradlew; ls -l gradlew; ./gradlew -v
  - echo 'DOWNLOAD AND SHOW ANDROID PROJECT DEPENDENCIES'; ./gradlew androidDependencies
  - echo 'CLEAN THIS PROJECT'; ./gradlew clean generateDebugSources generateDebugTestSources
  - echo 'COMPILE DEBUG & DEBUG TEST SOURCES'; ./gradlew compileDebugSources compileDebugTestSources

before_script:
  - echo 'WAIT FOR EMULATOR'; chmod +x ./scripts/wait_for_emulator.sh; ./scripts/wait_for_emulator.sh
  - echo 'SEND INPUT MENU KEY TO EMULATOR'; adb shell input keyevent 82 &
  - echo 'REDIRECT LOGCAT OUTPUT TO A FILE'; adb -e logcat *:W | tee logcat.log > /dev/null 2>&1 &

script:
  - echo 'ASSEMBLE ALL DEBUG BUILDS'; ./gradlew assembleDebug${DISABLE_PREDEX:-}
  - echo 'ASSEMBLE ALL DEBUG TEST BUILDS'; ./gradlew assembleDebugTest ${DISABLE_PREDEX:-}
  - echo 'INSTALL MODULE DEBUG BUILD'; ./gradlew :${MOD_NAME:-app}:installDebug ${DISABLE_PREDEX:-}
  - echo 'INSTALL AND RUN DEBUG TESTS BUILDS'; ./gradlew connectedAndroidTest ${DISABLE_PREDEX:-}
  - echo 'PREPARE ALL RELEASE BUILDS'; ./gradlew generateReleaseSources ${DISABLE_PREDEX:-}
  - echo 'ASSEMBLE ALL RELEASE BUILDS'; ./gradlew assembleRelease  ${DISABLE_PREDEX:-}
  - echo 'ASSEMBLE AND TEST THIS PROJECT'; ./gradlew build ${DISABLE_PREDEX:-}
  - echo 'RUN ALL DEVICE CHECKS ON CONNECTED DEVICES'; ./gradlew connectedCheck ${DISABLE_PREDEX:-}

after_failure:
  - echo "FAILURE: INSTALLING LYNX REQUIRED FOR SHOW EXTRA LOGS:'; apt-get install -qq lynx || true
  - 'export LOG_DIR=${TRAVIS_BUILD_DIR}/${MOD_NAME}/build/outputs/reports/androidTests/connected/'
  - 'lynx --dump ${LOG_DIR}com.android.builder.testing.ConnectedDevice.html > myConnectedDevice.log'
  - 'lynx --dump ${LOG_DIR}com.android.builder.testing.html > myTesting.log'
  - 'for file in *.log; do echo "$file"; echo "====================="; cat "$file"; done || true'
  - 'cat ${TRAVIS_BUILD_DIR}/${MOD_NAME}/build/intermediates/tmp/dex/debug/libraryList.txt'
  - 'cat ${TRAVIS_BUILD_DIR}/${MOBI_MOD_NAME}/build/intermediates/tmp/dex/debug/inputList.txt'
  - 'cat ${TRAVIS_BUILD_DIR}/${WEAR_MOD_NAME}/build/intermediates/tmp/dex/debug/inputList.txt'

after_success:
  - echo 'SUCCESS'

after_script:
  - echo "SHOW ADB LOGCAT OUTPUT AND KILL ADB"; cat logcat.log; pkill -KILL -f adb
