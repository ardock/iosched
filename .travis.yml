# Copyright 2014 Google Inc. All rights reserved.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: android

jdk:
  # Check Travis JDKs http://docs.travis-ci.com/user/languages/java/#Testing-Against-Multiple-JDKs
  # If 'jdk:' section is not found, Travis-ci use one jdk by default. You can comment out 'jdk:' and
  # test against more than one JDK: 'jdk' is combined with 'env' to construct a build matrix.
  # - openjdk7
  - oraclejdk7

android:
  components:
    # Check the project requirements and the components included by default on Travis-ci vm image.
    # Check required: https://github.com/google/iosched/blob/master/doc/BUILDING.md
    # Check defaults: http://docs.travis-ci.com/user/languages/android/#Pre-installed-components

    # Check Android SDK Platform-tools: http://developer.android.com/tools/revisions/platforms.html
    # Check Android SDK tools: http://developer.android.com/tools/sdk/tools-notes.html
    # Comment the lines below if the latest revisions of Android SDK Tools are included by default.
    # - tools
    # - platform-tools

    # Check BuildTools: http://developer.android.com/tools/revisions/build-tools.html
    # Comment the lines below if the latest BuildTools revisions required for building are included.
    # - build-tools-20.0.0
    # - build-tools-21.0.2
    # - build-tools-21.1.0

    # Check APIs: http://developer.android.com/guide/topics/manifest/uses-sdk-element.html#ApiLevels
    # Comment the lines below if the SDK versions used to compile android are already included.
    # - android-20
    # - android-21

    # Check extras: http://developer.android.com/sdk/installing/adding-packages.html#GetSupportLib
    # Comment the lines below if the latest Android extras are included or not required.
    # - extra-android-m2repository
    # - extra-android-support

    # Check extras: http://developer.android.com/sdk/installing/adding-packages.html#GetGoogle
    # Comment the lines below if the latest Google extras are included or not required.
    # - extra-google-m2repository
    # - extra-google-google_play_services

    # Check get tools: http://developer.android.com/sdk/installing/adding-packages.html#GetTools
    # Comment the lines below if the latest images are included or you don't need to run emulator/s.
    # - sys-img-armeabi-v7a-android-wear-20
    # - sys-img-x86-android-21
    # - sys-img-armeabi-v7a-android-21

  licenses:
    # Check licenses: http://docs.travis-ci.com/user/languages/android/#Dealing-with-Licenses
    # By default Travis will accept all the licenses, but it's also possible to define a white list:
    # White list android-sdk-license used by Android SDK Platform-tools, rev 21 and other tools.
    # - 'android-sdk-license-5be876d5'
    # White list all android-sdk-license revisions.
    # - 'android-sdk-license-.+'
    # White list all the licenses.
    - '.+'

notifications:
  email: false


env:
  matrix:
    # Travis CI will run your tests against a matrix of all possible combinations (including 'jdk').
    # For Android projects, env and jdk can be given as arrays to construct a build matrix.
    # See http://docs.travis-ci.com/user/build-configuration/#The-Build-Matrix
    - AVD_TARGET=android-15  AVD_ABI=armeabi-v7a  ARGS=''
    # - AVD_TARGET=android-16  AVD_ABI=armeabi-v7a  ARGS=''
    # - AVD_TARGET=android-17  AVD_ABI=armeabi-v7a  ARGS=''
    # - AVD_TARGET=android-18  AVD_ABI=armeabi-v7a  ARGS=''
    - AVD_TARGET=android-19  AVD_ABI=armeabi-v7a  ARGS=''
    # - AVD_TARGET=android-21  AVD_ABI=armeabi-v7a  ARGS=''
    # - AVD_TARGET=android-15  AVD_ABI=armeabi-v7a  ARGS='-PdisablePreDex'
    # - AVD_TARGET=android-16  AVD_ABI=armeabi-v7a  ARGS='-PdisablePreDex'
    - AVD_TARGET=android-17  AVD_ABI=armeabi-v7a  ARGS='-PdisablePreDex'
    # - AVD_TARGET=android-18  AVD_ABI=armeabi-v7a  ARGS='-PdisablePreDex'
    # - AVD_TARGET=android-19  AVD_ABI=armeabi-v7a  ARGS='-PdisablePreDex'
    - AVD_TARGET=android-21  AVD_ABI=armeabi-v7a  ARGS='-PdisablePreDex'

matrix:
  # Check fast finishing - blog: http://blog.travis-ci.com/2013-11-27-fast-finishing-builds/
  # Check fast finishing - docs: http://docs.travis-ci.com/user/build-configuration/#Fast-finishing
  # Disabled until https://github.com/travis-ci/travis-ci/issues/1696 is fixed.
  # I received emails about build status and i didn't activate notifications. Only a phew days.
  # fast_finish: true

  # Check allow: http://docs.travis-ci.com/user/build-configuration/#Rows-That-are-Allowed-To-Fail
  # Allowed until we can set a less restrictive timeout on tests (android-studio 0.9.1 gradle 0.14+)
  allow_failures:
    - env: AVD_TARGET=android-21  AVD_ABI=armeabi-v7a  ARGS=''
    - env: AVD_TARGET=android-21  AVD_ABI=armeabi-v7a  ARGS='-PdisablePreDex'


before_install:
  # Check Travis build lifecycle http://docs.travis-ci.com/user/build-configuration/#Build-Lifecycle
  # Travis CI uses virtual machine snapshotting to make sure no state is left between builds.
  # Check http://docs.travis-ci.com/user/customizing-the-build/#Customizing-the-Installation-Step

  # - echo " @-- EXPORT AVD ARGS --@ "
  # Comment out the line below to add Disable Pre-dexing option to build matrix and gradle commands.
  - if [[ "${ARGS:-}" == *-PdisablePreDex* ]]; then export DISABLE_PREDEX="-PdisablePreDex"; fi
  # Comment out the line below to custom avd name. Defaults to test if not used (:- ads default '').
  - export AVD_NAME="test-${AVD_TARGET}-${AVD_ABI}-${RANDOM:-}${DISABLE_PREDEX:-}"
  # Comment out the line below to custom avd path. Defaults to ./avds/test if AVD_NAME not set.
  - pwd && mkdir ./avds && export AVD_PATH="./avds/${AVD_NAME:-test}" && echo "$AVD_PATH"

  # - echo " @-- EXTRA DEPENDENCIES --@ "
  # Use this to prepare the system to install prerequisites or dependencies e.g. sudo apt-get update
  - pwd && ls -al && sudo apt-get update -qq
  # Comment out the lines below to show android SDK components and targets installed
  - android list sdk --no-ui --all --extended | grep -E '^id:' | awk -F '"' '{$1=""; print $2}'
  - android list targets
  - echo yes | android update sdk --filter tools --no-ui --verbose --force

  # - echo " @-- CREATE & START AVD --@ "
  # Check manage avds: http://developer.android.com/tools/devices/managing-avds-cmdline.html
  # Check android create avd: http://developer.android.com/tools/help/android.html
  # TODO: I tried to break command in two lines using \ but doesn't work?
  - echo no | android create avd --force -n "${AVD_NAME:-test}" -t "$AVD_TARGET" --abi "$AVD_ABI" -p "${AVD_PATH:-.}"
  - pwd && ls "${AVD_PATH:-.}" -al && cat "${AVD_PATH:-.}/config.ini"
  # Check emulator: http://developer.android.com/tools/help/emulator.html#startup-options
  - emulator -avd "${AVD_NAME:-test}" -no-skin -no-audio -no-window &

  # - echo " @-- WAIT FOR DEVICE --@ "
  # Check adb commands: http://developer.android.com/tools/help/adb.html
  # Comment out the line below to block execution until the emulator is online (device state).
  - adb wait-for-device
  - adb devices


install:
  # - echo " @-- SKIP INSTALL STAGE --@ "
  # Use this to install any prerequisites or dependencies necessary to run your build.
  # Check install section: http://docs.travis-ci.com/user/build-configuration/#install
  # If you'd like to skip the install stage entirely, set it to true and nothing will be run.
  - true
  # TODO: Travis kills emulator a lot when concurrent jobs. Move other tasks to script  or ...?

  # - echo " @-- GRADLE ANDROID DEPENDENCIES --@ "
  # Check Build with Gradle: http://developer.android.com/sdk/installing/studio-build.html
  # Travis downloads gradle first time is called and it downloads the project dependencies.
  # Comment out the lines belows to add execution permission, download and show gradlew version.
  - chmod +x gradlew && ls -l gradlew && ./gradlew -version
  # Comment out the line below to clean project and show the android project dependencies.
  - ./gradlew androidDependencies --refresh-dependencies --info

  # - echo " @-- CLEAN PROJECT --@ "
  # Comment out the line below to prepare the Debug and DebugTest project sources.
  - ./gradlew clean generateDebugSources generateDebugTestSources

  # - echo " @-- REBUILD PROJECT --@ "
  # Comment out the line below to prepare the Debug and DebugTest project sources.
  - ./gradlew clean compileDebugJava


before_script:
  # Use this to prepare your build for testing. You can also define scripts to be run before script.
  # Check http://docs.travis-ci.com/user/build-configuration/#before_script%2C-after_script

  # - echo " @-- WAIT FOR EMULATOR --@ "
  # Check emulator help: http://developer.android.com/tools/help/emulator.html
  # Check key events reference: http://developer.android.com/reference/android/view/KeyEvent.html
  # Comment out the lines below to execute the script and send input key constant 'Menu key'.
  - chmod +x scripts/wait_for_emulator.sh && ls -l scripts/wait_for_emulator.sh
  - ./scripts/wait_for_emulator.sh
  # - adb shell input keyevent 26 &
  - adb shell input keyevent 82 &
  - adb devices

  # - echo " @-- LOGCAT --@ "
  # Check logcat debug output: http://developer.android.com/tools/help/logcat.html
  # Check debugging log: http://developer.android.com/tools/debugging/debugging-log.html
  # Comment the lines belows to debug output and redirect it to a file. Custom tags for your app.
  - adb logcat *:W | tee logcat.log &


script:
  # - echo " @-- DEFAULT TRAVIS BUILD --@ "
  # By default Travis-ci execute './gradlew build connectedCheck' if no 'script:' section found.
  # Remember to add DISABLE_PREDEX flag always gradle tasks perform predex to avoid dexing errors.
  # - ./gradlew build connectedCheck ${DISABLE_PREDEX:-}

  # OR

  # - echo " @-- BUILD DEBUG AND TEST --@ "
  # Added disable pre-dexing option to build matrix. Code checks if ARGS contains '-PdisablePreDex'
  # and if ${DISABLE_PREDEX:-} option is added on gradlew, pre-dexing on build server is disabled.
  # Otherwise pre-dexing is enabled. It's the default option if ARGS or DISABLE_PREDEX is not found.
  # http://tools.android.com/tech-docs/new-build-system/tips#TOC-Improving-Build-Server-performance.
  - ./gradlew assembleDebug ${DISABLE_PREDEX:-}
  - ./gradlew assembleDebugTest ${DISABLE_PREDEX:-}
  # Comment out the line below to install and run tests for Build 'debug' on connected devices
  - ./gradlew connectedAndroidTest ${DISABLE_PREDEX:-}

  # - echo " @-- BUILD RELEASE AND TEST --@ "
  # Comment out the line below to prepare the Release project sources (predex wearable, be aware).
  - ./gradlew generateReleaseSources ${DISABLE_PREDEX:-}
  # Comment out the line below to assemble and test this project for Build 'release'
  - ./gradlew assembleRelease  ${DISABLE_PREDEX:-}
  # Comment out the line below to run all device checks on currently connected devices
  - ./gradlew connectedCheck ${DISABLE_PREDEX:-}


after_failure:
  - echo " @-- Failure --@ "
  # TODO: Solve issue (timeout api-21) https://code.google.com/p/android/issues/detail?id=69735
  # TODO: Solution coming soon :) https://android-review.googlesource.com/#/c/112780/
  # TODO: Offer known solutions after failure?. Delete ERROR and TODO sections.


after_success:
  - echo " @-- Success --@ "
  # - echo " @-- @-- @-- Lollipops For All --@ --@ --@ "


after_script:
  # Check http://docs.travis-ci.com/user/build-configuration/#Build-Lifecycle
  # Test result is exported to TRAVIS_TEST_RESULT which you can use in commands run in after_script.
  # Standard Unix exit code of "0" means the build passed; everything else is treated as failure.
  - if [[ "${TRAVIS_TEST_RESULT}" == "0" ]]; then echo "BUILD SUCCESSFUL"; else echo "ERROR"; fi

  # Shows logs. Customize first line, 'android' is the specific app module name of this project.
  - export MY_MOD="android"
  - export MY_LOG_DIR="$(pwd)/${MY_MOD}/build/outputs/reports/androidTests/connected/"
  - pwd && cd "${MY_LOG_DIR:-.}" && pwd && ls -al
  - sudo apt-get install -qq lynx && lynx --dump index.html > myIndex.log
  - lynx --dump com.android.builder.testing.ConnectedDevice.html > myConnectedDevice.log
  - lynx --dump com.android.builder.testing.html > myTesting.log
  - for file in *.log; do echo "$file"; echo "====================="; cat "$file"; done || true

  # Uncomment the line below to kill adb (if used before script) and show the logcat log.
  - echo " LOGCAT" && echo "=========" && cat logcat.log &&  pkill -KILL -f adb


  # @--@--@--@--@
  # @-- ERROR --@
  # @--@--@--@--@
  #
  # Error occurred while compiling the build script: undefined method `empty?' for nil:NilClass
  # Error: Target id (android-21) is not valid. Use 'android list targets' to get the target ids.
  # @-- 132.1 --@ android-21 (android: components:)
  #
  # Could not find any version that matches com.google.android.gms:play-services-wearable:6.1.+.
  # @-- 134.1 --@ extra-google-m2repository (android: components:)
  #
  # Invalid --abi armeabi-v7a for the selected target. (android-21)
  # @-- 135.6 --@ tools (android: components:)
  #
  # Manifest merger failed : uses-sdk:minSdkVersion 14 cannot be smaller than version L declared ...
  # @-- 137.1 --@ extra-android-m2repository (android: components:)
  #
  # The command "./gradlew build connectedCheck" exited with 137.
  # @-- 141.5 --@ Reload job or optimize build. killed by Travis. Check concurrent jobs, emulator...
  #
  # Failed to find Build Tools revision 21.0.2 (vm updating soon, and rev. 2.1 is published, update)
  # @-- 142.1 --@ build-tools-21.0.2 or better build-tools-21.1.0 (android: components:)
  #
  # com.android.ddmlib.InstallException. connectedAndroidTest run tests failed, (exceed timeout).
  # @-- Issue: https://code.google.com/p/android/issues/detail?id=69735  (now optimize/reload job).
  # @-- 144.6 --@ Solution: https://android-review.googlesource.com/#/c/112780/ (inc. install time).
  #
  # emulator: WARNING: Could not initialize OpenglES emulation, using software renderer.
  # @-- Check: http://developer.android.com/tools/devices/emulator.html#starting
  # @-- 157.3 --@  You cannot run a VM-accelerated emulator inside another virtual machine. Can?
  #
  # emulator: ERROR: x86 emulation currently requires hardware acceleration!
  # Please ensure KVM is properly installed and usable.
  # @-- 200.3 --@  CPU acceleration status: KVM is not installed (/dev/kvm is missing).
  #
  # problem reading network stats ava.lang.IllegalStateException: problem parsing idx 1
  # at com.android.internal.net.NetworkStatsFactory.readNetworkStatsDetail(NetworkStatsFactory. 300)
  # @-- Check limitations: http://developer.android.com/tools/devices/emulator.html#limitations
  # @-- Check network :http://developer.android.com/tools/devices/emulator.html#emulatornetworking
  # @-- 180.1 --@ No support for determining network connected state
  #
  #
  #
  # @--@--@--@--@
  # @-- TODO: --@
  # @--@--@--@--@
  #
  #
  # Modules without tests, gradle 0.13.2, connectedAndroidTest
  # Issue @-- https://code.google.com/p/android/issues/detail?id=76249
  # Solution: https://android-review.googlesource.com/#/c/112529/
  #
  # Upgrade to Android Gradle plugin, 0.14.0
  # Check Android Gradle plugin 0.14.0 : http://tools.android.com/tech-docs/new-build-system
  # Requires Android Studio 0.9.0 (currently canary)
  # Check Android Studio 0.9.0: http://tools.android.com/recent/androidstudio090released
  # Requires Build-Tools 21.1.0, and Support repository rev 8.
  # (quick fix button option but plugin APIs changed, so you may need to tweak your build files)
  #
  # Two Issues: https://code.google.com/p/android/issues/detail?id=77682
  # Solution1: The gradle sync issue has to be fixed on the model side in Gradle 0.14.
  # https://android-review.googlesource.com/#/c/111656/
  # Solution2: The class loader issue is fixed for Android Studio 0.8.14.
  # https://android-review.googlesource.com/#/c/111741/
  #
  # Error Code: 127 com.android.ide.common.internal.LoggedErrorException :android:preDexDebug
  # @-- 135.5 --@ Reload job?
  # @-- 179.6 --@ Gradle Dependencies aar inner jar?
  #
  # W/MediaScanner(  546): Error opening directory '/mnt/sdcard/', skipping: Permission denied.
  # E/ThrottleService(  278): Error reading data file
  # http://stackoverflow.com/questions/11788459/apps-not-running-on-android-emulator-device
  #
  # E/Trace   (  882): error opening trace file: No such file or directory (2)
  # W/ActivityManager(  284): No content provider found for permission revoke:
  # file:///data/local/tmp/Wearable-debug.apk
  # W/PackageParser(  284): /data/app/vmdl1732774682.tmp (at Binary XML file line #22):
  # Requires newer sdk version #20 (current version is #17)
  # Failure [INSTALL_FAILED_OLDER_SDK]
  #
  #
  # Download http://repo1.maven.org/maven2/net/sf/kxml/kxml2/2.3.0/kxml2-2.3.0.pom
  # Download http://repo1.maven.org/maven2/kxml2/kxml2/2.3.0/kxml2-2.3.0.pom
  # kxml2#kxml2;2.3.0 is relocated to net.sf.kxml#kxml2;2.3.0. Please update your dependencies.
  # @-- 219.4 --@
  #
  # Resource missing. [HTTP GET: http://repo1.maven.org/maven2/com/android/support/support-v13/21.0.0/support-v13-21.0.0.pom]
  # Resource missing. [HTTP HEAD: http://repo1.maven.org/maven2/com/android/support/support-v13/21.0.0/support-v13-21.0.0.jar]
  # Relying on packaging to define the extension of the main artifact has been deprecated and is scheduled to be removed in Gradle 2.0
  # Resource missing. [HTTP GET: http://repo1.maven.org/maven2/com/google/android/support/wearable/1.0.0/wearable-1.0.0.pom]
  # Resource missing. [HTTP HEAD: http://repo1.maven.org/maven2/com/google/android/support/wearable/1.0.0/wearable-1.0.0.jar]
  # Resource missing. [HTTP GET: http://repo1.maven.org/maven2/com/google/android/gms/play-services-wearable/6.1.71/play-services-wearable-6.1.71.pom]
  # Resource missing. [HTTP HEAD: http://repo1.maven.org/maven2/com/google/android/gms/play-services-wearable/6.1.71/play-services-wearable-6.1.71.jar]
  # Resource missing. [HTTP GET: http://repo1.maven.org/maven2/com/android/support/support-v4/21.0.0/support-v4-21.0.0.pom]
  # Resource missing. [HTTP HEAD: http://repo1.maven.org/maven2/com/android/support/support-v4/21.0.0/support-v4-21.0.0.jar]
  # Resource missing. [HTTP GET: http://repo1.maven.org/maven2/com/android/support/support-annotations/21.0.0/support-annotations-21.0.0.pom]
  # Resource missing. [HTTP HEAD: http://repo1.maven.org/maven2/com/android/support/support-annotations/21.0.0/support-annotations-21.0.0.jar]
  # /home/travis/build.sh: line 41:  3582 Killed   ./gradlew clean androidDependencies --refresh-dependencies --info ${DISABLE_PREDEX:-}
  # @-- 219.4 --@
  #
  # /home/travis/build.sh: line 41:  3281 Killed  emulator -avd ... -no-skin -no-audio -no-window
  # @-- 219.8 --@  Move other tasks to script and prepare emulator before script. No concurrent jobs
  #
  #
  # Download http://repo1.maven.org/maven2/com/google/apis/google-api-services-drive/v2-rev151-1.19.0/google-api-services-drive-v2-rev151-1.19.0.pom
  # Resource missing. [HTTP GET: http://repo1.maven.org/maven2/com/android/support/support-v4/20.0.0/support-v4-20.0.0.pom]
  # Resource missing. [HTTP HEAD: http://repo1.maven.org/maven2/com/android/support/support-v4/20.0.0/support-v4-20.0.0.jar]
  #
  # http://stackoverflow.com/questions/26473929/android-gradle-dependency-resolution-order